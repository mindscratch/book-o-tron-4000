<?xml version="1.0" ?>
<comp:BaseViewer xmlns:comp="bookotron.ui.view.components.*"
               xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Metadata>
        [Event(name="createAuthor",type="bookotron.ui.events.AuthorActionEvent")]
        [Event(name="retrieveAuthor",type="bookotron.ui.events.AuthorActionEvent")]
        [Event(name="updateAuthor",type="bookotron.ui.events.AuthorActionEvent")]
        [Event(name="deletedAuthor",type="bookotron.ui.events.AuthorActionEvent")]

        [ManagedEvents("createAuthor,retrieveAuthor,updateAuthor,authorDeleted")]
    </mx:Metadata>

    <mx:Script>
    <![CDATA[
        import bookotron.ui.events.AuthorActionEvent;
        import bookotron.ui.view.vo.AuthorsVo;
        import mx.logging.ILogger;
        import mx.logging.Log;

        protected static const logger:ILogger = Log.getLogger("AdminViewer");

        private var _authorsVo:AuthorsVo;

        private function cc():void{
            logger.info("creation complete");
        }

        // injected
        [Inject]
        public function set authorsVo(authorsVo:AuthorsVo):void{
            logger.info("injecting AuthorsVo");
            _authorsVo = authorsVo;
        }

        // message handlers
        [MessageHandler(selector="authorCreated")]
        public function onAuthorCreated(ev:AuthorActionEvent):void{
            logger.info("Author " + ev.author.id + " created");
        }

        // event handlers
        private function onCreateAuthorBtnClick(ev:MouseEvent):void{
           logger.info("onCreateAuthorBtnClick | dispatching CREATE_AUTHOR event");
           dispatchEvent(new AuthorActionEvent(AuthorActionEvent.CREATE_AUTHOR)); 
        }
    ]]>
    </mx:Script>
    <mx:Label text="Admin Viewer" />
    <mx:Spacer height="100%"/>
    <mx:HBox  width="100%" >
        <mx:Button id="createAuthorBtn"
                   click="onCreateAuthorBtnClick(event);"
                   label="@Resource(key='CREATE_AUTHOR_BUTTON_LABEL', bundle='UI')"/>
    </mx:HBox>

</comp:BaseViewer>